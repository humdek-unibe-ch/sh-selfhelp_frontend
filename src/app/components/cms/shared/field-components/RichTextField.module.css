/* Variable styling */
.variable {
    background-color: rgba(34, 197, 94, 0.1);
    border-radius: 0.25rem;
    padding: 0.125rem 0.25rem;
    color: rgb(34, 197, 94);
    font-weight: 500;
    border: 1px solid rgba(34, 197, 94, 0.2);
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
}

.variable:hover {
    background-color: rgba(34, 197, 94, 0.15);
}

/* Suggestion popup styling */
.suggestionPopup {
    max-height: 200px;
    overflow-y: auto;
    min-width: 150px;
    pointer-events: auto;
}

.suggestionItem {
    padding: 8px 12px;
    cursor: pointer;
    border-bottom: 1px solid #f0f0f0;
    transition: background-color 0.15s ease;
    border: none;
    background: none;
    text-align: left;
    width: 100%;
    font-size: inherit;
    color: inherit;
}

.suggestionItem:hover {
    background-color: #f8f9fa;
}

.suggestionItem:last-child {
    border-bottom: none;
}

.suggestionItem.selected {
    background-color: rgba(34, 197, 94, 0.2);
    font-weight: 600;
}

/* Text input mode styling */
.textInputMode {
    padding: 8px 12px !important;
    border: 1px solid #ced4da;
    border-radius: 4px;
    font-size: 14px;
    line-height: 1.5;
    background-color: #fff;
    min-height: 36px !important;
    max-height: 36px !important;
    overflow: hidden;
    white-space: nowrap;
}

.textInputMode:focus {
    outline: none;
    border-color: #228be6;
    box-shadow: 0 0 0 2px rgba(34, 139, 230, 0.2);
}

.textInputMode p {
    margin: 0 !important;
    display: inline;
}

.textInputMode * {
    display: inline;
    white-space: nowrap;
}

/* Override default ProseMirror padding only in text input mode */
.removePadding.textInputMode .mantine-RichTextEditor-content .ProseMirror {
    padding: 0 !important;
}

/* Extra specific override for Mantine's generated classes in text input mode only */
.removePadding.textInputMode [class*="mantine-RichTextEditor-content"] .ProseMirror {
    padding: 0 !important;
}

/* Direct global override for text input mode only */
:global(.RichTextField-module__27jHHq__textInputMode .ProseMirror) {
    padding: 0 !important;
}